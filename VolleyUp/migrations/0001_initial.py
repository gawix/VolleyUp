# Generated by Django 2.2.2 on 2019-06-25 10:41

import VolleyUp.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Training',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField(auto_now_add=True)),
                ('facility', models.IntegerField(choices=[(1, 'Sala nr 1'), (2, 'Sala nr 2')], default=1)),
                ('level', models.IntegerField(choices=[(1, 'podstawowy'), (2, 'średniozaawansowany'), (3, 'profesjonalny')], default=1)),
                ('organization', models.IntegerField(choices=[(1, 'PZU'), (2, 'Siemens'), (3, 'Wedel'), (4, 'PJATK'), (5, 'Volley Up')], default=5)),
                ('description', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='user email')),
                ('phone_number', models.CharField(max_length=17, verbose_name='numer telefonu')),
                ('birth_date', models.IntegerField(blank=True, verbose_name='data urodzenia')),
                ('sex', models.IntegerField(choices=[(1, 'mężczyzna'), (2, 'kobieta')], default=1)),
                ('organization', models.IntegerField(choices=[(1, 'PZU'), (2, 'Siemens'), (3, 'Wedel'), (4, 'PJATK'), (5, 'Volley Up')], default=5)),
                ('level', models.IntegerField(choices=[(1, 'podstawowy'), (2, 'średniozaawansowany'), (3, 'profesjonalny')], default=1)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', VolleyUp.models.UserManager()),
            ],
        ),
    ]
